import type { Metadata, Redirect } from "next";
import localFont from "next/font/local";
import "./globals.scss";
import MeasureWidth from '../components/MeasureWidth/MeasureWidth'; // import it at the top
import Sidebar from "@/components/Sidebar/Sidebar";
import Player from "@/components/Player/player";
import Header from "@/components/Header/Header";
// Manrope (100–900, normal)
const manrope = localFont({
  src: [
    { path: "../fonts/manrope/Manrope-VariableFont.woff2", weight: "100 900", style: "normal" },
    { path: "../fonts/manrope/Manrope-VariableFont.woff", weight: "100 900", style: "normal" },
  ],
  variable: "--font-manrope",
});

// Plus Jakarta Sans (100–900, normal + italic)
const plusJakartaSans = localFont({
  src: [
    // Normal
    { path: "../fonts/plusJakartaSans/PlusJakartaSans-VariableFont.woff2", weight: "100 900", style: "normal" },
    { path: "../fonts/plusJakartaSans/PlusJakartaSans-VariableFont.woff", weight: "100 900", style: "normal" },

    // Italic
    { path: "../fonts/plusJakartaSans/PlusJakartaSans-Italic-VariableFont.woff2", weight: "100 900", style: "italic" },
    { path: "../fonts/plusJakartaSans/PlusJakartaSans-Italic-VariableFont.woff", weight: "100 900", style: "italic" },
  ],
  variable: "--font-jakarta",
});

// SF Pro Display (900, normal)
const sfProDisplay = localFont({
  src: [
    { path: "../fonts/sfprodisplayheavy/sfprodisplayheavy.woff2", weight: "900", style: "normal" },
    { path: "../fonts/sfprodisplayheavy/sfprodisplayheavy.woff", weight: "900", style: "normal" },
  ],
  variable: "--font-display",
});
export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

export default function RootLayout({
  children,
}: Readonly<{ children: React.ReactNode }>) {
  return (
    <html lang="en">
      <body className={`${manrope.variable} ${plusJakartaSans.variable} ${sfProDisplay.variable}`}> <MeasureWidth />
        <Sidebar></Sidebar>
        <div className="page">
          <div className="container">
            <Header/>
            {children}
          </div>
        </div>
        <Player />
      </body>
    </html>
  );
}
